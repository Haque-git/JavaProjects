// Task: 01

package CSE111.Assignment_04.duplicate_classes;

public class Student {
    String name;
    String prog;
    public Student(String name, String prog) {
        this.name = name;
        this.prog = prog;
    }
    public void updateName(String name) {
        this.name = name;
    }
    public void updateProgram(String prog) {
        this.prog = prog;
    }
    public String accessProgram() {
        return this.prog;
    }
}


// Task: 02

package CSE111.Assignment_04;

public class Toy {
    String name;
    int price;
    public Toy(String name, int price) {
        this.name = name;
        this.price = price;
        System.out.println("A new toy has been made!");
    }
    public void updateName(String name) {
        System.out.printf("Changing old name: %s\n", this.name);
        this.name = name;
        System.out.printf("new name: %s\n", this.name);
    }
    public void updatePrice(int price) {
        this.price = price;
    }
    public void showPrice() {
        System.out.printf("Price: %s Taka\n",this.price);
    }
}


// Task: 03

package CSE111.Assignment_04;

public class Shape2D {
    //golabal variables
    String shape;
    double area;
    //square
    int side;
    //rectangle
    int length;
    int width;
    //triangle
    int base;
    int height;
    int side1;
    int side2;
    int side3;

    public Shape2D() {
        this.shape = "Square";
        this.side = 5;
        this.area = this.side * this.side;
        System.out.printf("A %s has been created with length: %d\n", this.shape, this.side);
    }
    public Shape2D(int length, int width) {
        this.shape = "Rectangle";
        this.length = length;
        this.width = width;
        this.area = this.length * this.width;
        System.out.printf("A %s has been created with length: %d and width: %d\n", this.shape, this.length, this.width);
    }
    public Shape2D(int base, int height, String shape) {
        this.shape = shape;
        this.base = base;
        this.height = height;
        this.area = 0.5 * this.base * this.height;
        System.out.printf("A %s has been created with base: %d and height: %d\n", this.shape, this.base, this.height);
    }
    public Shape2D(int side1, int side2, int side3) {
        this.shape = "Triangle";
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
        double s = (this.side1 + this.side2 + this.side3) / 2.0;
        this.area = Math.sqrt(s * (s - this.side1) * (s - this.side2) * (s - this.side3));
        System.out.printf("A %s has been created with sides: %d, %d and %d\n", this.shape, this.side1, this.side2, this.side3);
    }

    public void area() {
        System.out.printf("The area of the %s is: %.2f\n", this.shape, this.area);
    }
}


// Task: 04

package CSE111.Assignment_04.duplicate_classes.more_duplicate_classes;

public class Student {
    int studentID;
    double CGPA;
    private int capacity;
    String[] courses;
    private int index = 0;

    public Student(int studentID) {
        this.studentID = studentID;
        System.out.printf("A Student has been created with ID: %d\n", studentID);
    }

    public Student(int studentID, double CGPA) {
        this.studentID = studentID;
        storeCG(CGPA);
        System.out.printf("A Student has been created with ID: %d and CGPA: %.2f\n", studentID, CGPA);
    }

    int addCourse(String course) {
        if (CGPA==0) {
            System.out.printf("Failed to add %s\nset CG first\n", course);
            return 0;
        }
        if (index < capacity) {
            courses[index] = course;
            index++;
        } else {
            if (capacity == 3) {
                System.out.printf("Failed to add %s\n", course);
                System.out.println("CG is low. Can't add more than 3 courses.");
            } else {
                System.out.printf("Failed to add %s\n", course);
                System.out.println("Maximum 4 courses allowed.");
            }
            return -1;
        }
        return 0;
    }

    void addCourse(String[] courses) {
        for (String course : courses) {
            int result = this.addCourse(course);
            if (result == -1) {
                break;
            }
        }
    }

    void storeID(int studentID) {
        this.studentID = studentID;
    }

    void storeCG(double CGPA) {
        this.CGPA = CGPA;
        if (CGPA <= 3) {
            capacity = 3;
            courses = new String[capacity];
        } else {
            capacity = 4;
            courses = new String[capacity];
        }
    }

    void showAdvisee() {
        System.out.printf("Student ID: %d, ", studentID);
        System.out.printf("CGPA: %.2f\n", CGPA);
        if (index == 0) {
            System.out.println("No courses added.");
            return;
        }
        System.out.println("Added courses are: ");
        for (int i = 0; i < index; i++) {
            System.out.print(courses[i] + " ");
        }
        System.out.println();
    }

    void removeAllCourse() {
        for (String course : this.courses) {
            course = null;
        }
        index = 0;
        System.out.println("All courses have been removed.");
    }




}


// Task: 08

package CSE111.Assignment_04;

public class Student {
    String name;
    String dep;
    int ID;
    String email;
    String password;
    boolean isLoggedIn = false;
    boolean hasSpaciaPermit = false;
    String[] courses = new String[4];
    int index = 0;

    public Student(String name, int ID, String dep) {
        this.name = name;
        this.ID = ID;
        this.dep = dep;
        System.out.println("Student object is created");
    }
}


package CSE111.Assignment_04;

public class Usis {
    private int capacity = 5;
    int totalAdvises = 0;
    int index = 0;
    Student[] students = new Student[capacity];

    public void login(Student student) {
        if (student.email == null || student.password == null) {
            System.out.println("Email and password need to be set.");
            return;
        }

        student.isLoggedIn = true;
        System.out.println("Login successful!");
    }

    public void advising(Student student) {
        if (!student.isLoggedIn) {
            System.out.println("Please login to advise courses!");
            return;
        }
        System.out.println("You haven't selected any courses.");
    }

    public void advising(Student student, String course1, String course2, String course3) {
        if (!student.isLoggedIn) {
            System.out.println("Please login to advise courses!");
            return;
        }

        student.courses[0] = course1;
        student.courses[1] = course2;
        student.courses[2] = course3;
        student.index = 3;
        this.students[index] = student;
        index++;
        totalAdvises++;
        System.out.println("Advising successful!");
    }

    public void advising(Student student, String course1, String course2, String course3, String course4) {
        if (!student.isLoggedIn) {
            System.out.println("Please login to advise courses!");
            return;
        }

        if (!student.hasSpaciaPermit) {
            System.out.println("You need special approval to take more than 3 courses.");
            return;
        }
        student.courses[0] = course1;
        student.courses[1] = course2;
        student.courses[2] = course3;
        student.courses[3] = course4;
        student.index = 4;
        this.students[index] = student;
        index++;
        totalAdvises++;
        System.out.println("Advising successful!");
    }

    public void allAdviseeInfo() {
        System.out.printf("Total students %d\n", totalAdvises);
        for (int i = 0; i < totalAdvises; i++) {
            Student current_student = students[i];
            System.out.printf("Name: %s ID: %d Department: %s\n", current_student.name, current_student.ID, current_student.dep);
            System.out.println("Advised Courses:");
            for (int j = 0; j < current_student.index; j++) {
                System.out.print(current_student.courses[j]+ " ");
            }
            System.out.println();
        }
    }

}
