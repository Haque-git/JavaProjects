// task: 1

package CSE111.Assignment_07;

public class WebSite {
    private String url;

    WebSite next;
    WebSite prev;

    public WebSite(String url) {
        this.url = url;
        this.next = null;
        this.prev = null;
    }

    public String getUrl() {
        return this.url;
    }
}

package CSE111.Assignment_07;

public class BrowserHistory {
    WebSite head;
    WebSite tale;
    int maxSize = 3;
    int count;
    
    public BrowserHistory(int maxSize) {
        this.maxSize = maxSize;
        this.head = null;
        this.tale = null;
        this.count = 0;
    }

    public void visitWeb(String url) {
        if (this.count >= this.maxSize) {
            System.out.printf("History is full. Cannot visit %s web page\n", url);
            return;
        }
        WebSite newWebSide = new WebSite(url);
        if (this.head == null) {
            this.head = newWebSide;
            this.tale = newWebSide;
        } else {
            newWebSide.prev = this.tale;
            this.tale.next = newWebSide;
            this.tale = newWebSide;
        }
        System.out.println("Visited: "+ url);
        this.count++;
    }

    public void showHistory() {
        if (this.head == null) {
            System.out.println("No web pages visited yet.");
            return;
        }
        WebSite currSite = this.head;
        System.out.println("Browser History:");
        while (currSite != null) {
            System.out.println(currSite.getUrl());
            currSite = currSite.next;
        }
    }
    
    public void currentWeb() {
        if (this.tale == null) {
            System.out.println("You have not visited any website yet!");
            return;
        }
        System.out.printf("Current web page: %s\n", tale.getUrl());
    }

    public void back() {
        if (this.head == null) {
            return;
        }
        if (this.head == this.tale) {
            this.head = null;
            this.tale = null;
        } else {
            this.tale = this.tale.prev;
            this.tale.next = null;
        }
        this.count--;
    }
}


// task: 2

package CSE111.Assignment_07;

public class Queue {
    private String customerName;

    Queue next;
    Queue prev;
    public Queue(String customerName) {
        this.customerName = customerName;
        this.next = null;
        this.prev = null;
    }
    public String getCustomerName() {
        return this.customerName;
    }
}


package CSE111.Assignment_07;

public class CustomerService {
    private Queue head;
    private Queue tale;
    private int maxSize;
    private int size;

    public CustomerService(int maxSize) {
        this.maxSize = maxSize;
        this.head = null;
        this.tale = null;
        this.size = 0;
    }

    public void addCustomer(String customerName) {
        if (size >= maxSize) {
            System.out.printf("Queue is full. Cannot add %s\n", customerName);
            return;
        }
        Queue newCustomer = new Queue(customerName);
        if (this.head == null) {
            this.head = this.tale = newCustomer;
        } else {
            this.tale.next = newCustomer;
            newCustomer.prev = this.tale;
            this.tale = newCustomer;
        }
        size++;
        System.out.println("Added: " + customerName);
    }

    public void serveCustomer() {
        if (head == null) {
            System.out.println("No customer to serve.");
            return;
        }
        System.out.println("Serving " + head.getCustomerName());
        head = head.next;
        if (head != null) {
            head.prev = null;
        } else {
            tale = null;
        }
        size--;
    }
}


// task: 3

package CSE111.Assignment_07;

public class Circle extends Shape {
    public double radius;

    public void area() {
        double area = Math.PI * radius * radius;
        System.out.printf("Area of %s Circle: %.2f\n", super.color, area);
    }
}


// task: 4

package CSE111.Assignment_07;

public class Dog extends Animal {
    public String name;

    public Dog() {
        System.out.println("The dog says hello!");
    }

    public void updateSound(String sound) {
        this.sound = sound;
    }

    public String getName() {
        return name;
    }
    
}


// task: 5

package CSE111.Assignment_07;

public class Cricket_Tournament extends Tournament {
    
    private int noOfTeam;
    private String type;
    
    public Cricket_Tournament() {
        super();
        this.noOfTeam = 0;
        this.type = "No Type";
    }

    public Cricket_Tournament(String name, int noOfTeam, String type) {
        super(name);
        this.noOfTeam = noOfTeam;
        this.type = type;
    }

    public String detail() {

        return "Cricket Tournamnet Name: " + super.getName() + "\nNumber of Teams: " + this.noOfTeam + "\nType: " + this.type;
    }    
}


package CSE111.Assignment_07;

public class Tennis_Tournament extends Tournament {
    
    private int numberOfPlayer;

    public Tennis_Tournament(String name, int numberOfPlayer) {
        super(name);
        this.numberOfPlayer = numberOfPlayer;
    }

    public String detail() {

        return "Tennis Tournament Name: " + super.getName() + "\nNumber of Players: " + this.numberOfPlayer;
    }
}

